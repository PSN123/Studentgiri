{"version":3,"sources":["compenents/Firebaseconfig.js","Firebase.js","compenents/Todo.js","Actions/index.js","App.js","reducers/TodoReducer.js","reducers/index.js","Store.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","config","db","firestore","Todo","useState","input","setInput","list","useSelector","state","TodoReducer","dispatch","useDispatch","className","type","placeholder","value","onChange","e","target","onClick","data","collection","add","todo","payload","id","Math","random","map","elem","style","color","App","initialData","action","onSnapshot","querySnapshot","docs","doc","updatelist","filter","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"0NAWeA,G,MAXM,CACjBC,OAAQ,0CACRC,WAAY,6BACZC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,eACnBC,MAAO,8CCFXC,IAASC,cAAcC,GAEvB,IAEeC,EAFNH,IAASI,Y,OCsCHC,EAxCF,WACX,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMC,YAAYH,QAChDI,EAAWC,cAEjB,OACE,mCACE,qBAAKC,UAAU,WAAf,SACE,sBAAKA,UAAU,YAAf,UACE,iCACE,8DAEF,sBAAKA,UAAU,WAAf,UACE,uBAAOC,KAAK,OAAOC,YAAY,YAC7BC,MAAOX,EACPY,SAAU,SAACC,GAAD,OAAOZ,EAASY,EAAEC,OAAOH,UAErC,mBAAGH,UAAU,qBAAqBO,QAAS,kBAAMT,GCnBtCU,EDmBuDhB,EClB3EJ,EAAGqB,WAAW,SAASC,IAAI,CACzBC,KAAKH,IAEI,CACFP,KAAK,UACLW,QAAQ,CACJC,GAAGC,KAAKC,SACRP,KAAKA,KDWiEf,EAAS,KCnBzE,IAACe,QDsBb,qBAAKR,UAAU,YAAf,SAEIN,EAAKsB,KAAI,SAACC,GACR,OACE,mCACE,sBAAKjB,UAAU,WAAf,UACE,6BAAKiB,EAAKT,OACV,mBAAGR,UAAU,0BAA0BkB,MAAO,CAAEC,MAAO,SAAWZ,QAAS,kBAAMT,ECT7F,CACFG,KAAK,SACLY,GDO+GI,EAAKJ,UAFzEI,EAAKJ,mBEjBzCO,G,MARH,WACV,OACE,mCACE,cAAC,EAAD,Q,uBCLAC,EAAa,CACf3B,KAAK,IA0CMG,EAvCK,WAA6B,IAA5BD,EAA2B,uDAArByB,EAAYC,EAAS,uCAC5C,OAAOA,EAAOrB,MACV,IAAK,UACD,MAAiBqB,EAAOV,QAAjBC,EAAP,EAAOA,GAAGL,EAAV,EAAUA,KACV,kCACOZ,GADP,IAEIF,KAAK,GAAD,mBACGE,EAAMF,MADT,CAEA,CACImB,GAAGA,EACHL,KAAKA,OAKrB,IAAK,WAOL,OANIpB,EAAGqB,WAAW,SAASc,YAAW,SAAUC,GACtCA,EAAcC,KAAKT,KAAI,SAACU,GAAD,MAAU,CAC/Bb,GAAIa,EAAIb,GACRF,KAAMe,EAAIlB,OAAOG,YAG7B,eACOf,GAIP,IAAK,SACL,IAAM+B,EAAa/B,EAAMF,KAAKkC,QAAO,SAACX,GAAD,OAASA,EAAKJ,KAAOS,EAAOT,MACjE,kCACQjB,GADR,IAEKF,KAAKiC,IAGZ,QAAQ,OAAO/B,ICnCNiC,EAHKC,YAAgB,CAChCjC,gBCGWkC,EAFFC,YAAYH,EAAYI,OAAOC,8BAAgCD,OAAOC,gCCGnFC,IAASC,OAEL,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACA,cAAC,EAAD,MAEFM,SAASC,eAAe,W","file":"static/js/main.d1ed83a6.chunk.js","sourcesContent":["var firebaseConfig = {\r\n    apiKey: \"AIzaSyA0gVV0Bnf64q7NFHzjKbD6vCnJojbgh6c\",\r\n    authDomain: \"todo-3d50e.firebaseapp.com\",\r\n    projectId: \"todo-3d50e\",\r\n    storageBucket: \"todo-3d50e.appspot.com\",\r\n    messagingSenderId: \"130920220526\",\r\n    appId: \"1:130920220526:web:5a9e745d6a0b794640e37f\"\r\n  };\r\n\r\n\r\n\r\nexport default firebaseConfig;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport config from './compenents/Firebaseconfig';\r\n\r\nfirebase.initializeApp(config);\r\n\r\nconst db=firebase.firestore();\r\n\r\nexport default db;","import React, { useState} from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addTodo, remove} from '../Actions/index';\r\n\r\nconst Todo = () => {\r\n  const [input, setInput] = useState('');\r\n  const list = useSelector((state) => state.TodoReducer.list);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"main-div\">\r\n        <div className=\"child-div\">\r\n          <figure>\r\n            <figcaption>Add your list here</figcaption>\r\n          </figure>\r\n          <div className=\"addItems\">\r\n            <input type=\"text\" placeholder=\"Add items\"\r\n              value={input}\r\n              onChange={(e) => setInput(e.target.value)}\r\n            />\r\n            <i className=\"fa fa-plus add_btn\" onClick={() => dispatch(addTodo(input), setInput(''))}></i>\r\n\r\n          </div>\r\n          <div className=\"showItems\">\r\n            {\r\n              list.map((elem) => {\r\n                return (\r\n                  <>\r\n                    <div className=\"eachItem\" key={elem.id}>\r\n                      <h3>{elem.data}</h3>\r\n                      <i className=\"fa fa-trash-alt add_btn\" style={{ color: 'black' }} onClick={() => dispatch(remove(elem.id))}></i>\r\n                    </div>\r\n                </>\r\n                )\r\n              })\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Todo;\r\n","import db from \"../Firebase\";\r\n\r\nexport const addTodo =(data)=>{\r\n   db.collection(\"todos\").add({\r\n     todo:data\r\n   })\r\n        return{\r\n            type:\"addTodo\",\r\n            payload:{\r\n                id:Math.random(),\r\n                data:data\r\n            }\r\n        }    \r\n}\r\n\r\nexport const showdata=(data)=>{\r\n    return{\r\n        type:\"showdata\"\r\n    }\r\n}\r\n\r\nexport const remove =(id)=>{\r\n    return{\r\n        type:\"remove\",\r\n        id\r\n    }\r\n}\r\n","import React from 'react'\nimport Todo from './compenents/Todo';\nimport './compenents/Todo.css';\n\nconst App = () => {\n  return (\n    <>\n      <Todo/>\n    </>\n  )\n}\n\nexport default App;\n","import db from \"../Firebase\";\r\n\r\nconst initialData ={\r\n    list:[]\r\n}\r\n//const [list,setList]=useState([])\r\nconst TodoReducer = (state=initialData,action)=>{\r\n    switch(action.type){\r\n        case \"addTodo\" :\r\n            const {id,data} =action.payload;  \r\n            return{\r\n                ...state,\r\n                list:[\r\n                    ...state.list,\r\n                    {\r\n                        id:id,\r\n                        data:data\r\n\r\n                }]\r\n            }    \r\n\r\n        case \"showdata\":\r\n            db.collection(\"todos\").onSnapshot(function (querySnapshot) {\r\n                  querySnapshot.docs.map((doc) => ({\r\n                    id: doc.id,\r\n                    todo: doc.data().todo\r\n                  }))\r\n              });\r\n        return{\r\n            ...state\r\n\r\n            }    \r\n\r\n        case \"remove\" :\r\n        const updatelist = state.list.filter((elem)=> elem.id !== action.id)  \r\n        return{\r\n             ...state,\r\n             list:updatelist\r\n        } \r\n\r\n      default:return state;\r\n    }\r\n}\r\n\r\n\r\nexport default TodoReducer;","import TodoReducer from \"./TodoReducer\";\r\nimport { combineReducers } from \"redux\";\r\nconst rootReducer = combineReducers({\r\n    TodoReducer\r\n})\r\nexport default rootReducer;","import { createStore } from \"redux\";\r\n\r\nimport rootReducer from \"./reducers/index\";\r\n\r\nconst store= createStore(rootReducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport store from './Store';\n\nReactDOM.render(\n  \n    <Provider store={store}> \n    <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}